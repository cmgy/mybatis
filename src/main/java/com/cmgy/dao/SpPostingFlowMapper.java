package com.cmgy.dao;

import com.cmgy.model.SpPostingFlow;
import com.cmgy.model.SpPostingFlowExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;

public interface SpPostingFlowMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sp_posting_flow
     *
     * @mbggenerated
     */
    int countByExample(SpPostingFlowExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sp_posting_flow
     *
     * @mbggenerated
     */
    int deleteByExample(SpPostingFlowExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sp_posting_flow
     *
     * @mbggenerated
     */
    @Delete({
        "delete from sp_posting_flow",
        "where pid = #{pid,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long pid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sp_posting_flow
     *
     * @mbggenerated
     */
    @Insert({
        "insert into sp_posting_flow (pid, id, ",
        "t_id, inter_msg_id, ",
        "accounting_id, batch_id, ",
        "accounting_type, accounting_status, ",
        "posting_account, merch_id, ",
        "crdr_flag, posting_account_type, ",
        "posting_type, posting_curreny, ",
        "posting_amount, balance, ",
        "rate, posting_date, ",
        "posting_time, mid, ",
        "voucher, mop, core_account_id, ",
        "core_account_date, core_settlement_date, ",
        "core_posting_office_id, cort_account, ",
        "input_opt_id, recon_id, ",
        "chk_opt_id, verify_opt_id, ",
        "auth_opt_id, appr_opt_id, ",
        "create_datetime, modify_datetime, ",
        "msgderid, msgxml, ",
        "orgnl_msg_id, orgnl_t_id)",
        "values (#{pid,jdbcType=BIGINT}, #{id,jdbcType=VARCHAR}, ",
        "#{tId,jdbcType=VARCHAR}, #{interMsgId,jdbcType=VARCHAR}, ",
        "#{accountingId,jdbcType=VARCHAR}, #{batchId,jdbcType=VARCHAR}, ",
        "#{accountingType,jdbcType=VARCHAR}, #{accountingStatus,jdbcType=VARCHAR}, ",
        "#{postingAccount,jdbcType=VARCHAR}, #{merchId,jdbcType=VARCHAR}, ",
        "#{crdrFlag,jdbcType=VARCHAR}, #{postingAccountType,jdbcType=VARCHAR}, ",
        "#{postingType,jdbcType=VARCHAR}, #{postingCurreny,jdbcType=VARCHAR}, ",
        "#{postingAmount,jdbcType=DECIMAL}, #{balance,jdbcType=DECIMAL}, ",
        "#{rate,jdbcType=VARCHAR}, #{postingDate,jdbcType=TIMESTAMP}, ",
        "#{postingTime,jdbcType=TIMESTAMP}, #{mid,jdbcType=VARCHAR}, ",
        "#{voucher,jdbcType=VARCHAR}, #{mop,jdbcType=VARCHAR}, #{coreAccountId,jdbcType=VARCHAR}, ",
        "#{coreAccountDate,jdbcType=TIMESTAMP}, #{coreSettlementDate,jdbcType=TIMESTAMP}, ",
        "#{corePostingOfficeId,jdbcType=VARCHAR}, #{cortAccount,jdbcType=VARCHAR}, ",
        "#{inputOptId,jdbcType=VARCHAR}, #{reconId,jdbcType=VARCHAR}, ",
        "#{chkOptId,jdbcType=VARCHAR}, #{verifyOptId,jdbcType=VARCHAR}, ",
        "#{authOptId,jdbcType=VARCHAR}, #{apprOptId,jdbcType=VARCHAR}, ",
        "#{createDatetime,jdbcType=TIMESTAMP}, #{modifyDatetime,jdbcType=TIMESTAMP}, ",
        "#{msgderid,jdbcType=VARCHAR}, #{msgxml,jdbcType=VARCHAR}, ",
        "#{orgnlMsgId,jdbcType=VARCHAR}, #{orgnlTId,jdbcType=VARCHAR})"
    })
    int insert(SpPostingFlow record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sp_posting_flow
     *
     * @mbggenerated
     */
    int insertSelective(SpPostingFlow record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sp_posting_flow
     *
     * @mbggenerated
     */
    List<SpPostingFlow> selectByExample(SpPostingFlowExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sp_posting_flow
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "pid, id, t_id, inter_msg_id, accounting_id, batch_id, accounting_type, accounting_status, ",
        "posting_account, merch_id, crdr_flag, posting_account_type, posting_type, posting_curreny, ",
        "posting_amount, balance, rate, posting_date, posting_time, mid, voucher, mop, ",
        "core_account_id, core_account_date, core_settlement_date, core_posting_office_id, ",
        "cort_account, input_opt_id, recon_id, chk_opt_id, verify_opt_id, auth_opt_id, ",
        "appr_opt_id, create_datetime, modify_datetime, msgderid, msgxml, orgnl_msg_id, ",
        "orgnl_t_id",
        "from sp_posting_flow",
        "where pid = #{pid,jdbcType=BIGINT}"
    })
    @ResultMap("BaseResultMap")
    SpPostingFlow selectByPrimaryKey(Long pid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sp_posting_flow
     *
     * @mbggenerated
     */
    int updateByExampleSelective(@Param("record") SpPostingFlow record, @Param("example") SpPostingFlowExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sp_posting_flow
     *
     * @mbggenerated
     */
    int updateByExample(@Param("record") SpPostingFlow record, @Param("example") SpPostingFlowExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sp_posting_flow
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(SpPostingFlow record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sp_posting_flow
     *
     * @mbggenerated
     */
    @Update({
        "update sp_posting_flow",
        "set id = #{id,jdbcType=VARCHAR},",
          "t_id = #{tId,jdbcType=VARCHAR},",
          "inter_msg_id = #{interMsgId,jdbcType=VARCHAR},",
          "accounting_id = #{accountingId,jdbcType=VARCHAR},",
          "batch_id = #{batchId,jdbcType=VARCHAR},",
          "accounting_type = #{accountingType,jdbcType=VARCHAR},",
          "accounting_status = #{accountingStatus,jdbcType=VARCHAR},",
          "posting_account = #{postingAccount,jdbcType=VARCHAR},",
          "merch_id = #{merchId,jdbcType=VARCHAR},",
          "crdr_flag = #{crdrFlag,jdbcType=VARCHAR},",
          "posting_account_type = #{postingAccountType,jdbcType=VARCHAR},",
          "posting_type = #{postingType,jdbcType=VARCHAR},",
          "posting_curreny = #{postingCurreny,jdbcType=VARCHAR},",
          "posting_amount = #{postingAmount,jdbcType=DECIMAL},",
          "balance = #{balance,jdbcType=DECIMAL},",
          "rate = #{rate,jdbcType=VARCHAR},",
          "posting_date = #{postingDate,jdbcType=TIMESTAMP},",
          "posting_time = #{postingTime,jdbcType=TIMESTAMP},",
          "mid = #{mid,jdbcType=VARCHAR},",
          "voucher = #{voucher,jdbcType=VARCHAR},",
          "mop = #{mop,jdbcType=VARCHAR},",
          "core_account_id = #{coreAccountId,jdbcType=VARCHAR},",
          "core_account_date = #{coreAccountDate,jdbcType=TIMESTAMP},",
          "core_settlement_date = #{coreSettlementDate,jdbcType=TIMESTAMP},",
          "core_posting_office_id = #{corePostingOfficeId,jdbcType=VARCHAR},",
          "cort_account = #{cortAccount,jdbcType=VARCHAR},",
          "input_opt_id = #{inputOptId,jdbcType=VARCHAR},",
          "recon_id = #{reconId,jdbcType=VARCHAR},",
          "chk_opt_id = #{chkOptId,jdbcType=VARCHAR},",
          "verify_opt_id = #{verifyOptId,jdbcType=VARCHAR},",
          "auth_opt_id = #{authOptId,jdbcType=VARCHAR},",
          "appr_opt_id = #{apprOptId,jdbcType=VARCHAR},",
          "create_datetime = #{createDatetime,jdbcType=TIMESTAMP},",
          "modify_datetime = #{modifyDatetime,jdbcType=TIMESTAMP},",
          "msgderid = #{msgderid,jdbcType=VARCHAR},",
          "msgxml = #{msgxml,jdbcType=VARCHAR},",
          "orgnl_msg_id = #{orgnlMsgId,jdbcType=VARCHAR},",
          "orgnl_t_id = #{orgnlTId,jdbcType=VARCHAR}",
        "where pid = #{pid,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(SpPostingFlow record);
}